#!/usr/bin/env zsh

ZSH_DOTFILES="${0:h}"

# Among other things, used for compatibility with OMZ plugins.
ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/dotfiles"
mkdir -pv -- "$ZSH_CACHE_DIR" "${ZSH_CACHE_DIR}/site-functions"

autoload -U colors && colors

# Performance {{{

  zmodload zsh/datetime
  typeset -A _perf_timers

  _perf_timer_start() {
    local name="$1"
    if [[ -z "$name" ]]; then
      print >&2 "$0: usage: $0 <name>"
      return 1
    fi
    _perf_timers[$name]="$EPOCHREALTIME"
  }

  _perf_timer_stop() {
    # Record the stop time as precisely as possible even in the case of an error
    local stop_time="$EPOCHREALTIME"
    local name="$1"
    if [[ -z "$name" ]]; then
      print >&2 "$0: usage: $0 <name>"
      return 1
    fi
    local start_time="${_perf_timers[$name]}"
    unset "_perf_timers[${(qq)name}]"
    local -i duration="$(( (stop_time - start_time) * 1000 ))"
    print -r -- "$(print -P '%F{8}==>%f') ${name}: ${duration}ms"
  }

# }}}

_perf_timer_start "total"

# platform identification {{{
  if [[ "$OSTYPE" == linux* ]]; then
    _is_linux=1
    if [[ "$OSTYPE" == linux-android ]]; then
      _is_android=1
    fi
  fi

  if [[ "$OSTYPE" == darwin* ]]; then
    _is_macos=1
  fi
# }}}

for script in functions options path env zplg plugins aliases completion zle alias_tips prompt colorscheme; do
  _perf_timer_start "$script.zsh"
  source "$ZSH_DOTFILES/$script.zsh"
  _perf_timer_stop "$script.zsh"
done

if is_function _dotfiles_customizations; then
  _dotfiles_customizations
fi

_perf_timer_stop "total"

if [[ -z "$DOTFILES_DISABLE_WELCOME" && -z "$POETRY_ACTIVE" ]]; then
  welcome
fi

if [[ -n "$DOTFILES_SYNC_LAST_WORKING_DIR" ]]; then
  sync_working_dir_load
fi

if [[ -n "$DOTFILES_RUN_HTOP_AFTER_START" ]]; then
  # Make it look as if the command was typed in interactively
  print -Pn -- "$PROMPT"
  print "htop"
  if is_function omz_termsupport_preexec; then
    omz_termsupport_preexec htop htop htop
  fi
  htop
fi
