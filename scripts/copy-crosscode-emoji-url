#!/usr/bin/env python3

import sys
import os
from configparser import ConfigParser
import requests
import json

sys.path.insert(
    1, os.path.join(os.path.dirname(os.path.dirname(__file__)), "script-resources")
)

import common_script_utils  # noqa F401


DEFAULT_REGISTRY_DUMP_URL = (
    "https://stronghold.crosscode.ru/~crosscodebot/emote-registry-tmp-export.json"
)


if os.name == "posix":
    config_path = (
        common_script_utils.DOTFILES_CONFIG_DIR / "copy-crosscode-emoji-url.ini"
    )
    default_registry_dump_file = common_script_utils.DOTFILES_CACHE_DIR / "dotfiles"
else:
    common_script_utils.platform_not_supported_error()
config = ConfigParser(interpolation=None)
config.read(config_path)


data = []


def emote_downloader_and_iterator():
    global data

    registry_dump_file = config.get(
        "default", "ccbot_emote_registry_dump_file", fallback=None
    )
    if registry_dump_file is not None:
        registry_dump_file = os.path.expanduser(registry_dump_file)
    else:
        registry_dump_file = default_registry_dump_file

    registry_dump_url = config.get(
        "default", "ccbot_emote_registry_dump_url", fallback=DEFAULT_REGISTRY_DUMP_URL
    )

    try:
        with open(registry_dump_file, "r") as f:
            data = json.load(f)
    except FileNotFoundError:
        response = requests.get(registry_dump_url, timeout=10)
        response.raise_for_status()
        data = response.json()

    assert data["version"] == 1

    for emote in data["list"]:
        yield "{emote[ref]} [{emote[guild_name]}]".format(emote=emote)


chosen_index = common_script_utils.run_chooser(
    emote_downloader_and_iterator(), prompt="emote", async_read=True
)
chosen_emote = data["list"][chosen_index]
common_script_utils.set_clipboard(chosen_emote["url"])
common_script_utils.send_notification(
    os.path.basename(__file__),
    "copied URL of {} to clipboard!".format(chosen_emote["ref"]),
)
