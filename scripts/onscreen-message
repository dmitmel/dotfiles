#!/usr/bin/env python3
import argparse

import gi

gi.require_version("Gtk", "3.0")
gi.require_version("Gdk", "3.0")
from gi.repository import Gdk, Gtk, Pango

parser = argparse.ArgumentParser()
parser.add_argument("message", type=str, nargs="+")
args = parser.parse_args()

message = " ".join(args.message)

window = Gtk.ApplicationWindow()
window.set_keep_above(True)
window.set_decorated(False)
window.set_default_size(800, 100)

scrolled_window = Gtk.ScrolledWindow()
label = Gtk.Label(label=message)
scrolled_window.add(label)


# This code is based on <https://github.com/GNOME/gtk/blob/3.24.34/gtk/gtkwindow.c#L1583-L1643>
# and <https://github.com/GNOME/gtk/blob/4.9.1/gtk/gtkwindowhandle.c#L416-L456>.
def on_drag_gesture_update(gesture, offset_x, offset_y) -> None:
  widget = gesture.props.widget
  if not widget.drag_check_threshold(0, 0, offset_x, offset_y):
    return
  gesture.set_state(Gtk.EventSequenceState.CLAIMED)
  start_pos = gesture.get_start_point()
  window = widget.get_toplevel().get_window()
  root_pos = window.get_root_coords(start_pos.x, start_pos.y)
  window.begin_move_drag_for_device(
    gesture.get_device(),
    gesture.get_current_button(),
    root_pos.root_x,
    root_pos.root_y,
    Gtk.get_current_event_time(),
  )
  gesture.reset()


drag_gesture = Gtk.GestureDrag(widget=scrolled_window)
drag_gesture.connect("drag-update", on_drag_gesture_update)

window.add(scrolled_window)


def on_key_release(_target, event) -> None:
  key = event.keyval
  if key in [Gdk.KEY_Escape, Gdk.KEY_q, Gdk.KEY_Q]:
    window.close()


def on_configure(target, event) -> None:
  if target != window or event.type != Gdk.EventType.CONFIGURE:
    return
  font_desc = Pango.FontDescription()
  font_desc.set_size(Pango.SCALE * event.height * 2 / 3)
  label.override_font(font_desc)


window.connect("configure-event", on_configure)
window.connect("key-release-event", on_key_release)
window.show_all()
window.connect("destroy", Gtk.main_quit)
Gtk.main()
